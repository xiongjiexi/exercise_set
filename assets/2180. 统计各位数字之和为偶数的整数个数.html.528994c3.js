import{_ as n,o as s,c as a,a as p}from"../app.99e1ebfc.mjs";const t={},e=p(`<h1 id="_2180-\u7EDF\u8BA1\u5404\u4F4D\u6570\u5B57\u4E4B\u548C\u4E3A\u5076\u6570\u7684\u6574\u6570\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#_2180-\u7EDF\u8BA1\u5404\u4F4D\u6570\u5B57\u4E4B\u548C\u4E3A\u5076\u6570\u7684\u6574\u6570\u4E2A\u6570" aria-hidden="true">#</a> 2180. \u7EDF\u8BA1\u5404\u4F4D\u6570\u5B57\u4E4B\u548C\u4E3A\u5076\u6570\u7684\u6574\u6570\u4E2A\u6570</h1><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countEven</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> d <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">-</span> d<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> t<span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> num <span class="token operator">-</span> d<span class="token punctuation">;</span> t <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">)</span> sum <span class="token operator">+=</span> t <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> cnt <span class="token operator">+</span> <span class="token punctuation">(</span>sum <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>d <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">++</span>d <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[e];function c(l,r){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","2180. \u7EDF\u8BA1\u5404\u4F4D\u6570\u5B57\u4E4B\u548C\u4E3A\u5076\u6570\u7684\u6574\u6570\u4E2A\u6570.html.vue"]]);export{k as default};
