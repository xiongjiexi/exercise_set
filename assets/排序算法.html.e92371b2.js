import{_ as p,o as e,c as o,b as n,d as t,a as c,e as s,r as l}from"../app.99e1ebfc.mjs";const i={},u=c(`<h1 id="\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5</h1><h2 id="\u5C3D\u53EF\u80FD\u7684\u95EE" tabindex="-1"><a class="header-anchor" href="#\u5C3D\u53EF\u80FD\u7684\u95EE" aria-hidden="true">#</a> \u5C3D\u53EF\u80FD\u7684\u95EE</h2><ol><li>\u4F60\u4E86\u89E3\u54EA\u4E9B\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5B83\u4EEC\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F\u591A\u5C11\uFF1F</li></ol><ul><li>O(n^2) <ul><li>\u5192\u6CE1\u6392\u5E8F</li><li>\u63D2\u5165\u6392\u5E8F</li><li>\u9009\u62E9\u6392\u5E8F</li></ul></li><li>O(nlogn) <ul><li>\u5FEB\u6392</li><li>\u5F52\u5E76\u6392\u5E8F</li></ul></li><li>O(n) <ul><li>\u6876\u6392\u5E8F</li><li>\u8BA1\u6570\u6392\u5E8F</li><li>\u57FA\u6570\u6392\u5E8F</li></ul></li></ul><ol start="2"><li>\u7B97\u6CD5\u9664\u4E86\u5173\u6CE8\u65F6\u95F4\u590D\u6742\u5EA6\u4EE5\u5916\u901A\u5E38\u8FD8\u9700\u5173\u6CE8\u54EA\u4E9B\u7B97\u6CD5\u7279\u5F81\uFF1F</li></ol><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6 <ul><li>\u6700\u597D\u3001\u6700\u5FEB\u3001\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6</li><li>\u6BD4\u8F83\u6B21\u6570\u3001\u4EA4\u6362\u6B21\u6570</li></ul></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF08\u7CFB\u6570\u3001\u5E38\u6570\u3001\u4F4E\u9636\uFF09 <ul><li>\u662F\u5426\u662F\u539F\u5730\u6392\u5E8F</li></ul></li><li>\u662F\u5426\u57FA\u4E8E\u6BD4\u8F83</li><li>\u7A33\u5B9A\u6027</li><li>\u6709\u5E8F\u5EA6\u548C\u9006\u5E8F\u5EA6</li></ul><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><p><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong></p><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><blockquote><p>\u5206\u4E3A\u5DF2\u6392\u5E8F\u533A\u95F4\u548C\u672A\u6392\u5E8F\u533A\u95F4\uFF0C\u5C06\u672A\u6392\u5E8F\u533A\u95F4\u4E2D\u7684\u6570\u9009\u4E00\u4E2A\u63D2\u5165\u5230\u5DF2\u6392\u5E8F\u533A\u95F4\u4E2D</p></blockquote><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u63D2\u5165\u6392\u5E8F\uFF0Ca \u8868\u793A\u6570\u7EC4\uFF0Cn \u8868\u793A\u6570\u7EC4\u5927\u5C0F</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728\u672A\u6392\u5E8F\u533A\u95F4\u62FF\u5230\u5F53\u524D\u8981\u6392\u5E8F\u7684\u6570</span>
        <span class="token keyword">int</span> value <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u67E5\u627E\u63D2\u5165\u7684\u4F4D\u7F6E</span>
        <span class="token comment">// \u521D\u59CB\u65F6\uFF0C\u9009\u62E9\u5DE6\u4FA7\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E3A\u5DF2\u6392\u5E8F\u533A\u95F4\uFF08\u5355\u4E2A\u5143\u7D20\u5F53\u7136\u6709\u5E8F\uFF09\uFF0C\u56E0\u6B64\u672A\u6392\u5E8F\u533A\u95F4\u662F\u5DF2\u6392\u5E8F\u533A\u95F4+1</span>
        <span class="token comment">// \u6240\u4EE5\u5DF2\u6392\u5E8F\u533A\u95F4\u4E3Ai-1\uFF0C\u5C06\u904D\u5386\u524Di-1\u4E2A\u5143\u7D20\uFF0C\u5C06\u7B2Ci\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u5176\u4E2D\u5373\u53EF</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6570\u636E\u79FB\u52A8</span>
                a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u63D2\u5165\u6570\u636E</span>
        a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h2><p>\u7B97\u6CD5\u5E94\u7528\uFF1A</p><ul><li>\u6C42\u9006\u5E8F\u5BF9</li><li>\u6C42\u4EA4\u6362\u6B21\u6570 <ul><li>\u6211\u4EEC\u90E8\u95E8\u8981\u6392\u961F\u5531\u6B4C\uFF0C\u5927\u5BB6\u4E71\u54C4\u54C4\u7684\u6324\u5728\u4E00\u8D77\uFF0C\u73B0\u5728\u9700\u8981\u6309\u4ECE\u4F4E\u5230\u9AD8\u7684\u987A\u5E8F\u62CD\u6210\u4E00\u5217\uFF0C\u4F46\u6BCF\u6B21\u53EA\u80FD\u4EA4\u6362\u76F8\u90BB\u7684\u4E24\u4F4D\uFF0C\u8BF7\u95EE\u6700\u5C11\u8981\u4EA4\u6362\u591A\u5C11\u6B21\uFF1F\u5982\uFF1A3, 1, 2, 5, 6, 4\uFF0C\u4EA4\u6362\u6B21\u6570\u4E3A4\u3002\u6700\u5C0F\u4EA4\u6362\u6B21\u6570\u5373\u662F\u9006\u5E8F\u5BF9\u6570\u76EE</li></ul></li><li>\u6C42\u6570\u7EC4\u5355\u8C03\u548C</li></ul><hr><h4 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h4><p>\u5B9E\u73B01\uFF08\u9012\u5F52\uFF09:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MergeSort</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//\u5728\u6392\u5E8F\u524D\uFF0C\u5148\u5EFA\u597D\u4E00\u4E2A\u957F\u5EA6\u7B49\u4E8E\u539F\u6570\u7EC4\u957F\u5EA6\u7684\u4E34\u65F6\u6570\u7EC4\uFF0C\u907F\u514D\u9012\u5F52\u4E2D\u9891\u7E41\u5F00\u8F9F\u7A7A\u95F4</span>
        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> left<span class="token punctuation">,</span><span class="token keyword">int</span> right<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>temp<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>left<span class="token punctuation">,</span>mid<span class="token punctuation">,</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5DE6\u8FB9\u5F52\u5E76\u6392\u5E8F\uFF0C\u4F7F\u5F97\u5DE6\u5B50\u5E8F\u5217\u6709\u5E8F</span>
            <span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>right<span class="token punctuation">,</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u53F3\u8FB9\u5F52\u5E76\u6392\u5E8F\uFF0C\u4F7F\u5F97\u53F3\u5B50\u5E8F\u5217\u6709\u5E8F</span>
            <span class="token function">merge</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>left<span class="token punctuation">,</span>mid<span class="token punctuation">,</span>right<span class="token punctuation">,</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5C06\u4E24\u4E2A\u6709\u5E8F\u5B50\u6570\u7EC4\u5408\u5E76\u64CD\u4F5C</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> left<span class="token punctuation">,</span><span class="token keyword">int</span> mid<span class="token punctuation">,</span><span class="token keyword">int</span> right<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span><span class="token comment">//\u5DE6\u5E8F\u5217\u6307\u9488</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//\u53F3\u5E8F\u5217\u6307\u9488</span>
        <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//\u4E34\u65F6\u6570\u7EC4\u6307\u9488</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp<span class="token punctuation">[</span>t<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                temp<span class="token punctuation">[</span>t<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5C06\u5DE6\u8FB9\u5269\u4F59\u5143\u7D20\u586B\u5145\u8FDBtemp\u4E2D</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            temp<span class="token punctuation">[</span>t<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u5C06\u53F3\u5E8F\u5217\u5269\u4F59\u5143\u7D20\u586B\u5145\u8FDBtemp\u4E2D</span>
            temp<span class="token punctuation">[</span>t<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5C06temp\u4E2D\u7684\u5143\u7D20\u5168\u90E8\u62F7\u8D1D\u5230\u539F\u6570\u7EC4\u4E2D</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>left<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>t<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B02\uFF08\u9012\u5F52\uFF09:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MergeSort</span> <span class="token keyword">implements</span> <span class="token class-name">IArraySort</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sourceArray<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9 arr \u8FDB\u884C\u62F7\u8D1D\uFF0C\u4E0D\u6539\u53D8\u53C2\u6570\u5185\u5BB9</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>sourceArray<span class="token punctuation">,</span> sourceArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> left <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> right <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token function">sort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>left<span class="token punctuation">.</span>length <span class="token operator">+</span> right<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                left <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> left<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                right <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>right<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            left <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> left<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>right<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            right <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>right<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FED\u4EE3\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">mergeSortIteration</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> start<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token comment">// \u4E24\u4E24\u5F52\u5E76\uFF0C\u76F4\u5230\u540E\u4E00\u4E2A\u5B50\u6570\u7EC4\u4E0D\u5B58\u5728</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span>start <span class="token operator">+</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mid <span class="token operator">=</span> start <span class="token operator">+</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
			end <span class="token operator">=</span> mid <span class="token operator">+</span> i <span class="token operator">&lt;</span> len <span class="token operator">?</span> mid <span class="token operator">+</span> i <span class="token operator">:</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token function">merge</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
			start <span class="token operator">=</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u5F52\u5E76\u4E0B\u4E00\u5BF9\u6570\u7EC4</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5806\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5806\u6392\u5E8F" aria-hidden="true">#</a> \u5806\u6392\u5E8F</h2><p><strong>\u5806\u7684\u5B9A\u4E49\uFF1A</strong></p><p>\u8BF7\u8DF3\u8F6C\u5230<code>\u7B97\u6CD5\u57FA\u7840\u7AE0\u8282\uFF08\u5806\uFF09</code>\u4E86\u89E3\u3002</p><p><strong>\u4E3A\u4EC0\u4E48\u5FEB\u6392\u7684\u6027\u80FD\u6BD4\u5806\u6392\u5E8F\u7684\u6027\u80FD\u597D\uFF1F</strong></p><ul><li>\u5FEB\u6392\u7684\u6570\u636E\u8BBF\u95EE\u65B9\u5F0F\u8F83\u4F18\u3002\u5FEB\u6392\u662F\u987A\u5E8F\u8BBF\u95EE\uFF0C\u6709\u5229\u4E8Ecpu\u7F13\u5B58\uFF1B\u800C\u5806\u6392\u5E8F\u662F\u8DF3\u7740\u8BBF\u95EE\u3002</li><li>\u5FEB\u6392\u7684\u6570\u636E\u4EA4\u6362\u6B21\u6570\u8981\u5C11\u4E8E\u5806\u6392\u5E8F\u3002\uFF08\u5E76\u4E14\u6709\u5E8F\u7684\u6570\u636E\uFF0C\u5728\u5EFA\u5806\u7684\u8FC7\u7A0B\u4E2D\u4F1A\u53D8\u6210\u65E0\u5E8F\u3002\uFF09</li></ul><p><strong>\u5806\u6392\u5E8F\u7684\u4F18\u52BF\u6709\u54EA\u4E9B\uFF1F</strong></p><ul><li>\u7A33\u5B9A\u7684\u65F6\u95F4\u590D\u6742\u5EA6</li><li></li></ul><p><strong>\u6709\u54EA\u4E9B\u6E90\u7801\u4E2D\u4F7F\u7528\u5806\u6392\u5E8F\u6765\u5B9E\u73B0\u6392\u5E8F\u51FD\u6570\uFF1F</strong></p><p><strong>\u65F6\u95F4\u7A7A\u95F4\u590D\u6742\u5EA6</strong></p><ul><li>\u65F6\u95F4 O(nlogn)</li><li>\u7A7A\u95F4 O(1)</li></ul><p><strong>\u5806\u6392\u5E8F\u7684\u6B65\u9AA4\u6709\u54EA\u4E9B\uFF1F</strong></p><ol><li>\u5EFA\u5806</li><li>\u6392\u5E8F</li></ol><p><strong>\u5BF9\u5E94\u4EE3\u7801\u5B9E\u73B0\uFF1A</strong></p><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h2><p><strong>\u9898\u76EE\uFF1A</strong></p>`,38),k={href:"https://leetcode.cn/problems/kth-largest-element-in-an-array/",target:"_blank",rel:"noopener noreferrer"},r=s("215. \u6570\u7EC4\u4E2D\u7684\u7B2CK\u4E2A\u6700\u5927\u5143\u7D20"),d=n("h2",{id:"\u8BA1\u6570\u6392\u5E8F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8BA1\u6570\u6392\u5E8F","aria-hidden":"true"},"#"),s(" \u8BA1\u6570\u6392\u5E8F")],-1),m={href:"https://blog.csdn.net/ThinkWon/article/details/101544159",target:"_blank",rel:"noopener noreferrer"},v=s("\u8BA1\u6570\u6392\u5E8F\u8D44\u6599"),b=n("h2",{id:"\u6392\u5E8F\u8D44\u6599",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6392\u5E8F\u8D44\u6599","aria-hidden":"true"},"#"),s(" \u6392\u5E8F\u8D44\u6599")],-1),h=n("p",null,"https://www.bilibili.com/video/av63851336 https://www.bilibili.com/video/av25136272 https://www.cnblogs.com/onepixel/p/7674659.html",-1);function w(y,g){const a=l("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",k,[r,t(a)])]),d,n("p",null,[n("a",m,[v,t(a)])]),b,h])}const _=p(i,[["render",w],["__file","\u6392\u5E8F\u7B97\u6CD5.html.vue"]]);export{_ as default};
