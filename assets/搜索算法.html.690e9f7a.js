import{_ as c,o as i,c as u,b as n,d as a,w as p,e as s,a as e,r as l}from"../app.99e1ebfc.mjs";const r={},k=n("h1",{id:"\u641C\u7D22\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u641C\u7D22\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" \u641C\u7D22\u7B97\u6CD5")],-1),d={class:"table-of-contents"},m=s("\u4E8C\u5206\u6CD5/\u4E8C\u5206\u67E5\u627E"),v=s("\u4E8C\u5206\u7EC6\u8282"),b=s("\u4E8C\u5206\u67E5\u627E\u6A21\u677F"),g=s("\u4E8C\u5206\u76F8\u5173\u9898\u76EE"),f=s("\u624B\u6495\u7B97\u6CD5\u9898"),h=s("DFS"),w=s("BFS"),y=e(`<h2 id="\u4E8C\u5206\u6CD5-\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u6CD5-\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> \u4E8C\u5206\u6CD5/\u4E8C\u5206\u67E5\u627E</h2><p>\u4E8C\u5206\u6CD5\u6709\u67E5\u627E\u7CBE\u786E\u503C\u7684\uFF0C\u4E5F\u6709\u67E5\u627E\u76F8\u5BF9\u7ED3\u679C\u7684\uFF0C\u4EE5\u4E0B\u5185\u5BB9\u8981\u6CE8\u610F\u533A\u5206\u573A\u666F\u3002</p><p>\u5148\u770B\u4E00\u4E2A\u5C0F\u7B11\u8BDD\uFF1A</p><blockquote><p>\u6709\u4E00\u5929\u963F\u4E1C\u5230\u56FE\u4E66\u9986\u501F\u4E86 N \u672C\u4E66\uFF0C\u51FA\u56FE\u4E66\u9986\u7684\u65F6\u5019\uFF0C\u8B66\u62A5\u54CD\u4E86\uFF0C\u4E8E\u662F\u4FDD\u5B89\u628A\u963F\u4E1C\u62E6\u4E0B\uFF0C\u8981\u68C0\u67E5\u4E00\u4E0B\u54EA\u672C\u4E66\u6CA1\u6709\u767B\u8BB0\u51FA\u501F\u3002\u963F\u4E1C\u6B63\u51C6\u5907\u628A\u6BCF\u4E00\u672C\u4E66\u5728\u62A5\u8B66\u5668\u4E0B\u8FC7\u4E00\u4E0B\uFF0C\u4EE5\u627E\u51FA\u5F15\u53D1\u8B66\u62A5\u7684\u4E66\uFF0C\u4F46\u662F\u4FDD\u5B89\u9732\u51FA\u4E0D\u5C51\u7684\u773C\u795E\uFF1A\u4F60\u8FDE\u4E8C\u5206\u67E5\u627E\u90FD\u4E0D\u4F1A\u5417\uFF1F\u4E8E\u662F\u4FDD\u5B89\u628A\u4E66\u5206\u6210\u4E24\u5806\uFF0C\u8BA9\u7B2C\u4E00\u5806\u8FC7\u4E00\u4E0B\u62A5\u8B66\u5668\uFF0C\u62A5\u8B66\u5668\u54CD\uFF1B\u4E8E\u662F\u518D\u628A\u8FD9\u5806\u4E66\u5206\u6210\u4E24\u5806\u2026\u2026 \u6700\u7EC8\uFF0C\u68C0\u6D4B\u4E86 logN \u6B21\u4E4B\u540E\uFF0C\u4FDD\u5B89\u6210\u529F\u7684\u627E\u5230\u4E86\u90A3\u672C\u5F15\u8D77\u8B66\u62A5\u7684\u4E66\uFF0C\u9732\u51FA\u4E86\u5F97\u610F\u548C\u5632\u8BBD\u7684\u7B11\u5BB9\u3002\u4E8E\u662F\u963F\u4E1C\u80CC\u7740\u5269\u4E0B\u7684\u4E66\u8D70\u4E86\u3002</p><p>\u4ECE\u6B64\uFF0C\u56FE\u4E66\u9986\u4E22\u4E86 N - 1 \u672C\u4E66\u3002</p></blockquote><h3 id="\u4E8C\u5206\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u7EC6\u8282" aria-hidden="true">#</a> \u4E8C\u5206\u7EC6\u8282</h3><ol start="0"><li><p>\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u4E8C\u5206\u6CD5\uFF1F</p><ul><li>\u6709\u5E8F</li><li>\u4E8C\u6BB5\u6027\uFF0C\u4F8B\u5982\u5C06\u6570\u7EC4\u5206\u4E3A\u4E24\u6BB5\u8FDE\u7EED\u5B50\u6570\u7EC4\uFF0Ccheck\u4E00\u6BB5\u8FD4\u56DEfalse\uFF0C\u53E6\u4E00\u6BB5\u8FD4\u56DEtrue\u3002</li><li>\u67D0\u4E9B\u5185\u5BB9\u6709\u5E8F\uFF0C\u6C42\u89E3\u53EF\u4EE5\u5229\u7528\u5176\u76F8\u5173\u7684\u6709\u5E8F\u6027\u8D28</li></ul></li><li><p>mid\u843D\u70B9\u662F\u5728\u504F\u5DE6\u8FD8\u662F\u504F\u53F3\uFF0C\u4E24\u79CD\u60C5\u51B5\u4E0B\u7684\u610F\u4E49\u662F\u4EC0\u4E48\uFF1F</p><blockquote><p>\u8BA9mid\u843D\u5728\u5DE6\u53F3\u53D6\u51B3\u4E8E\u96642\uFF1A\u6B63\u5E38\u6570\u96642\uFF0Cmid\u662F\u843D\u5728\u504F\u5DE6\u7684\uFF0C\u9700\u8981\u8BA9\u5176\u504F\u53F3\u53EF\u4EE5\u5C06\u88AB\u9664\u6570\u5148+1</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// mid\u843D\u5728\u504F\u5DE6</span>
mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// mid\u843D\u5728\u504F\u53F3\uFF0C\u8FD9\u91CC\u662F\u5173\u952E\uFF0C\u5728\u88AB\u9664\u6570+1\u4E86\u3002</span>
mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u9700\u8981\u6839\u636E\u9898\u610F\u5224\u65ADmid\u662F\u9760\u5DE6\u8FD8\u662F\u9760\u53F3\uFF0C\u6216\u662F\u8981\u76F4\u63A5\u627E\u51FAmid\u3002</strong></p></li><li><p>\u5FAA\u73AF\u6761\u4EF6\u662Fleft&lt;right\u8FD8\u662Fleft&lt;=right? \u5206\u522B\u90FD\u662F\u4F7F\u7528\u5728\u4EC0\u4E48\u60C5\u51B5\u4E0B\u7684\uFF1F</p><blockquote><p>left &lt; right\uFF1A\u5FAA\u73AF\u7EC8\u6B62\u6761\u4EF6\u4E3A<code>left==right</code>\uFF0C\u4E0D\u4F1A\u518D\u8D70while\u4E2D\u903B\u8F91\uFF0C\u6F0F\u6389\u4E86\u5DE6\u53F3\u6307\u9488\u76F8\u7B49\u7684\u573A\u666F\uFF0C\u56E0\u6B64\u9700\u8981\u5728while\u540E\u9762\u8865\u4E0A<code>nums[left] == target ? left : -1;</code>\u3002</p><p>left &lt;= right\uFF1A\u5FAA\u73AF\u7EC8\u6B62\u6761\u4EF6\u4E3A<code>left==right+1\uFF08==left+1\uFF09</code>\uFF0C\u6CA1\u6709\u573A\u666F\u9057\u6F0F\u3002\u4F46\u8981\u6CE8\u610F\uFF1Aleft\u3001right\u8D4B\u503C\u65F6<strong>\u4E0D\u5141\u8BB8\u4F7F\u7528=mid</strong>\uFF0C\u5426\u5219\u6709\u6B7B\u5FAA\u73AF\u53EF\u80FD\u3002</p></blockquote></li><li><p>\u9700\u8981\u5224\u65ADtarget == n[mid]\u76F4\u63A5\u8FD4\u56DEmid\u5417\uFF1F</p><blockquote><p>\u5F88\u591A\u573A\u666F\u4E0B\u5E76\u4E0D\u662F\u7528\u4E8C\u5206\u6CD5\u627E\u5230\u6307\u5B9A\u7684\u67D0\u4E2A\u7ED3\u679C\uFF0C\u800C\u662F\u627E\u5230\u76F8\u5BF9\u7684\u7ED3\u679C\u3002\u4F8B\u5982\uFF1A\u529B\u6263278\u9898\uFF08\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C\uFF09\u627E\u5230\u540C\u7C7B\u4E2D\u7B2C\u4E00\u4E2A\u4F5C\u4E3A\u7ED3\u679C\uFF0C\u8FD9\u662F\u6CA1\u6709\u529E\u6CD5\u76F4\u63A5\u5F97\u77E5mid\u662F\u5426\u6EE1\u8DB3\u7ED3\u679C\uFF0C\u76F4\u5230\u4E8C\u5206\u67E5\u627E\u5230\u6700\u540E\u624D\u80FD\u77E5\u9053\u3002</p></blockquote></li><li><p>\u4EC0\u4E48\u65F6\u5019left=mid\uFF0C\u6216left=mid+1\uFF1B\u540C\u6837\uFF0C\u4EC0\u4E48\u65F6\u5019right=mid\uFF0C\u6216right=mid-1\uFF1F</p><blockquote><p>\u5982\u679Cmid\u843D\u70B9\u504F\u5DE6\uFF0C\u5219\u79FB\u52A8left\u65F6\uFF0C\u4E00\u5B9A\u662F\u9700\u8981\u771F\u5B9E\u79FB\u52A8\u7684\uFF0C\u4E5F\u5C31\u662Fleft=mid+1</p><p>\u76F8\u53CD\uFF0Cmid\u843D\u70B9\u504F\u53F3\uFF0Cright=mid-1\u3002\u5728\u67E5\u627E\u76F8\u5BF9\u7ED3\u679C\u65F6\u4E00\u5B9A\u8981\u6CE8\u610F\u3002</p><p>\u800Ccheck()\u80FD\u786E\u8BA4\u7ED3\u679C\uFF0C\u5219\u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE\uFF0C\u4E14left\u3001right\u90FD\u5F3A\u5236\u79FB\u52A8\u5373\u53EF\u3002</p></blockquote><p>\u5F53\u6570\u7EC4\u5206\u4E3A\u4E24\u90E8\u5206\uFF0C\u4E00\u90E8\u5206\u7B26\u5408\u8981\u6C42\uFF0C\u4E00\u90E8\u5206\u4E0D\u7B26\u5408\uFF0C\u4E3A\u4E86\u627E\u51FA\u7B26\u5408\u8981\u6C42\u7684\u7B2C\u4E00\u4E2A\u6570\uFF08\u6709\u53EF\u80FD\u662F\u5DE6\u8FB9\u6700\u540E\u4E00\u4E2A\uFF0C\u6216\u53F3\u8FB9\u7B2C\u4E00\u4E2A\uFF09</p><ul><li>\u53EA\u6709\u4E00\u4E2A\u7ED3\u679C\u503C\uFF1A\u9760\u5DE6\u53F3\u65E0\u6240\u8C13\uFF0C\u5728while\u4E2D\u5224\u65AD\u662F\u5426==\uFF0Creturn\u5373\u53EF\u3002</li><li>\u53F3\u8FB9\u90E8\u5206\u7B26\u5408\uFF0C\u627E\u51FA\u53F3\u8FB9\u7B26\u5408\u4E2D\u7684\u6700\u5C0F\u503C\uFF1Amid\u9700\u8981\u9760\u5DE6\uFF0C\u8D4B\u503C\u65F6r=mid\u907F\u514D\u9519\u8FC7\u7ED3\u679C\uFF0Cl=mid+1</li><li>\u5DE6\u8FB9\u90E8\u5206\u7B26\u5408\uFF0C\u627E\u51FA\u5DE6\u8FB9\u7ED3\u679C\u96C6\u4E2D\u7684\u6700\u5927\u503C\uFF1Amid\u9760\u53F3\uFF0C\u8D4B\u503C\u65F6l=mid\u907F\u514D\u9519\u8FC7\u7ED3\u679C\uFF0Cr=mid-1</li></ul></li><li><p>\u4E8C\u5206\u67E5\u627E\u7684\u6570\u7EC4\u4E2D\u53EA\u6709\u4E00\u4E2A\u6570\u65F6\uFF0C\u600E\u4E48\u505A\uFF1F</p><blockquote><p>\u770Bwhile\u6761\u4EF6\u662F\u4EC0\u4E48\uFF1B\u53EF\u4EE5\u63D0\u524D\u5224\u65AD\uFF0C\u76F4\u63A5\u4E0Etarget\u6BD4\u8F83\uFF1B\u4E5F\u53EF\u4EE5\u5728\u6700\u540E\u515C\u5E95\u5224\u65AD\u3002</p></blockquote></li><li><p>\u6700\u540E\u662F\u8FD4\u56DE-1\u8FD8\u662Fleft\u6216right\uFF1F</p><blockquote><p>\u4E00\u822C\u6839\u636E\u9898\u610F\uFF0C\u82E5\u67E5\u627E\u4E0D\u5230\u8FD4\u56DE-1\u65F6\uFF0C\u5219\u9700\u8981\u515C\u5E95\u8FD4\u56DE-1\uFF1B\u82E5\u662F\u4E00\u5B9A\u4F1A\u5B58\u5728\u67E5\u627E\u7ED3\u679C\uFF0C\u5219\u53EF\u4EE5\u8FD4\u56DEleft\u6216right\uFF0C\u5177\u4F53\u8FD8\u9700\u8981\u6839\u636E\u5B83\u4EEC\u8D4B\u503C\u65F6\u8C01\u662F\u7528=mid\u3002</p></blockquote></li><li><p>\u4E8C\u5206\u533A\u95F4\u5982\u4F55\u5B9A\u4E49\uFF0C\u662F[left, right]\u8FD8\u662F[left, right)\uFF1F</p><blockquote><p>\u53D6\u51B3\u4E8E\u4E24\u70B9\uFF1A</p><ol><li>while(left ? right)\uFF0C\u5982\u679C\u7ED3\u679C\u9700\u8981\u5305\u542Bright\uFF0C\u5219\u5FC5\u987B&lt;=\uFF08\u9664\u975E\u5728\u6700\u540E\u515C\u5E95\u8FD9\u79CD\u573A\u666F\uFF09\uFF1B\u5426\u5219\u76F8\u53CD\uFF0C\u4E0D\u9700\u8981\u5305\u542Bright\uFF0C\u5219\u4F7F\u7528&lt;\uFF0C\u5F53\u7136\uFF0C\u5982\u679Cmid\u843D\u70B9\u504F\u5DE6\uFF0C\u8BF4\u4E0D\u5B9A\u53EF\u4EE5\u517C\u5BB9\uFF0C\u800C\u53EF\u4EE5\u968F\u4FBF\u4F7F\u7528&lt;\u6216&lt;=\u3002</li><li>mid\u843D\u70B9\u662F\u504F\u5DE6\u8FD8\u662F\u504F\u53F3\uFF0C\u53EF\u4EE5\u51B3\u5B9A\u662F\u5426\u80FD\u517C\u5BB9\u533A\u95F4\u5927\u4E8E\u7ED3\u679C\u533A\u95F4\u7684\u60C5\u51B5\u3002</li></ol></blockquote></li><li><p>\u7EC6\u8282\u5F88\u591A\uFF0C\u9700\u8981\u5982\u4F55\u7EC4\u5408\u8FD9\u4E9B\u7EC6\u8282\u5904\u7406\uFF1F</p><p>\u5176\u5B9E\u573A\u666F\u975E\u5E38\u591A\u53D8\uFF0C\u6700\u597D\u7684\u529E\u6CD5\u8FD8\u662F\u7406\u89E3\u5404\u79CD\u7EC4\u5408\u7684\u573A\u666F\uFF0C\u9047\u5230\u5177\u4F53\u573A\u666F\u591A\u52A0\u5206\u6790\uFF0C\u5206\u6790\u80FD\u529B\u5F88\u5173\u952E\u3002</p></li></ol><p><strong>\u7EC6\u8282\u4EE3\u7801\u5206\u6790\uFF1A</strong></p><p>\u5F53while(left&lt;right)\u65F6\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">search</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">for</span> l <span class="token operator">&lt;</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// mid\u843D\u70B9\u504F\u5DE6</span>
        <span class="token keyword">if</span> target <span class="token operator">==</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token comment">// \u5224\u65AD\u4E86==\uFF0C\u4E0B\u9762\u5DE6\u53F3\u8D4B\u503C\u65F6\u53EF\u4EE5+1\u548C-1</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span> 
            l <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid<span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9700\u8981\u515C\u5E95\u5904\u7406\uFF1A</span>
    <span class="token comment">// 1.\u53EA\u6709\u4E00\u4E2A\u6570\u7684\u6570\u7EC4\uFF1B</span>
    <span class="token comment">// 2.\u5269\u4E0B\u4E24\u4E2A\u6570\u4E14\u6700\u540Etarget&gt;mid\uFF0Cleft=mid+1\uFF0C\u6B64\u65F6left=right\u4E0D\u5FAA\u73AF\u4E86\uFF0C\u4F46left\u6709\u53EF\u80FD\u7B49\u4E8Etarget\u3002</span>
    <span class="token comment">// 3.\u5269\u4E0B\u4E09\u4E2A\u6570\u4E14\u6700\u540Etarget!=mid\uFF0C\u5219left\u548Cright\u4F1A\u79FB\u52A8\u5230\u76F8\u7B49\u7684\u4F4D\u7F6E\uFF0C\u56E0\u6B64\u9700\u8981\u515C\u5E95\u518D\u5224\u65AD\u4E00\u6B21</span>
    <span class="token comment">// \u603B\u7ED3\uFF1A\u7531\u4E8Ewhile(left&lt;right)\uFF0C\u4E0D\u5305\u542B\u7B49\u4E8E\uFF0C\u6240\u4EE5\u9700\u8981\u515C\u5E95\u5224\u65AD</span>
    <span class="token keyword">if</span> target <span class="token operator">==</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> l
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53while(left&lt;=right)\u65F6\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">search</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">for</span> l <span class="token operator">&lt;=</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> target <span class="token operator">==</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid<span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u5206\u67E5\u627E\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E\u6A21\u677F" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E\u6A21\u677F</h3><p>\u5149\u6709\u6A21\u677F\u771F\u7684\u6CA1\u7528\uFF0C\u78B0\u5230\u4E00\u4E9B\u9898\u76EE\u7684\u8FB9\u754C\u95EE\u9898\u8981\u5904\u7406\uFF0C\u5982\u679C\u4E0D\u662F\u771F\u6B63\u7406\u89E3\u6A21\u677F\u4E2D\u5904\u7406\u7EC6\u8282\u7684\u542B\u4E49\uFF0C\u662F\u6CA1\u529E\u6CD5\u767E\u5206\u767EAC\u7684\u3002</p>`,13),_={href:"https://ethsonliu.com/2018/04/binary-search.html",target:"_blank",rel:"noopener noreferrer"},q=s("\u53C2\u8003\u5730\u5740"),x=e(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* \u6CE8\u610F\uFF1A\u9898\u76EE\u4FDD\u8BC1\u6570\u7EC4\u4E0D\u4E3A\u7A7A\uFF0C\u4E14 n \u5927\u4E8E\u7B49\u4E8E 1 \uFF0C\u4EE5\u4E0B\u95EE\u9898\u9ED8\u8BA4\u76F8\u540C */</span>
<span class="token keyword">int</span> <span class="token class-name">BinarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u8FD9\u91CC\u662F int right = n \u7684\u8BDD\uFF0C\u90A3\u4E48\u4E0B\u9762\u6709\u4E24\u5904\u5730\u65B9\u9700\u8981\u4FEE\u6539\uFF0C\u4EE5\u4FDD\u8BC1\u4E00\u4E00\u5BF9\u5E94\uFF1A</span>
    <span class="token comment">// 1\u3001\u4E0B\u9762\u5FAA\u73AF\u7684\u6761\u4EF6\u5219\u662F while (left &lt; right)</span>
    <span class="token comment">// 2\u3001\u5FAA\u73AF\u5185\u5F53 array[middle] &gt; value \u7684\u65F6\u5019\uFF0Cright = middle</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span>  <span class="token comment">// \u5FAA\u73AF\u6761\u4EF6\uFF0C\u9002\u65F6\u800C\u53D8</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u9632\u6B62\u6EA2\u51FA\uFF0C\u79FB\u4F4D\u4E5F\u66F4\u9AD8\u6548\u3002\u540C\u65F6\uFF0C\u6BCF\u6B21\u5FAA\u73AF\u90FD\u9700\u8981\u66F4\u65B0\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;</span> value<span class="token punctuation">)</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&lt;</span> value<span class="token punctuation">)</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token keyword">return</span> middle<span class="token punctuation">;</span>
        <span class="token comment">// \u53EF\u80FD\u4F1A\u6709\u8BFB\u8005\u8BA4\u4E3A\u521A\u5F00\u59CB\u65F6\u5C31\u8981\u5224\u65AD\u76F8\u7B49\uFF0C\u4F46\u6BD5\u7ADF\u6570\u7EC4\u4E2D\u4E0D\u76F8\u7B49\u7684\u60C5\u51B5\u66F4\u591A</span>
        <span class="token comment">// \u5982\u679C\u6BCF\u6B21\u5FAA\u73AF\u90FD\u5224\u65AD\u4E00\u4E0B\u662F\u5426\u76F8\u7B49\uFF0C\u5C06\u8017\u8D39\u65F6\u95F4</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token class-name">BinarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> value<span class="token punctuation">)</span>  <span class="token comment">// \u56E0\u4E3A\u662F\u627E\u5230\u6700\u5C0F\u7684\u7B49\u503C\u4E0B\u6807\uFF0C\u6240\u4EE5\u7B49\u53F7\u653E\u5728\u8FD9\u91CC</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> value<span class="token punctuation">)</span>
        <span class="token keyword">return</span> left<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token class-name">BinarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> middle <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> value<span class="token punctuation">)</span>
            right <span class="token operator">=</span> middle <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            left <span class="token operator">=</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token operator">?</span> left <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u5206\u76F8\u5173\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u76F8\u5173\u9898\u76EE" aria-hidden="true">#</a> \u4E8C\u5206\u76F8\u5173\u9898\u76EE</h3><ul><li><strong>275. H \u6307\u6570 II</strong></li><li><strong>153. \u5BFB\u627E\u65CB\u8F6C\u6392\u5E8F\u6570\u7EC4\u4E2D\u7684\u6700\u5C0F\u503C</strong></li><li><strong>33. \u641C\u7D22\u65CB\u8F6C\u6392\u5E8F\u6570\u7EC4</strong></li><li><strong>287. \u5BFB\u627E\u91CD\u590D\u6570</strong></li><li><strong>704. \u4E8C\u5206\u67E5\u627E</strong></li><li><strong>633. \u5E73\u65B9\u6570\u4E4B\u548C</strong></li><li><strong>363. \u77E9\u5F62\u533A\u57DF\u4E0D\u8D85\u8FC7 K \u7684\u6700\u5927\u6570\u503C\u548C</strong></li><li><strong>1482. \u5236\u4F5C m \u675F\u82B1\u6240\u9700\u7684\u6700\u5C11\u5929\u6570</strong></li><li><strong>5764. \u51C6\u65F6\u5230\u8FBE\u7684\u5217\u8F66\u6700\u5C0F\u65F6\u901F\uFF08\u7B2C 242 \u573A\u5468\u8D5B\uFF09</strong></li><li><strong>374. \u731C\u6570\u5B57\u5927\u5C0F</strong></li><li><strong>852. \u5C71\u8109\u6570\u7EC4\u7684\u5CF0\u9876\u7D22\u5F15</strong></li><li><strong>167. \u4E24\u6570\u4E4B\u548C II - \u8F93\u5165\u6709\u5E8F\u6570\u7EC4</strong></li><li><strong>410. \u5206\u5272\u6570\u7EC4\u7684\u6700\u5927\u503C</strong></li><li><strong>\u5251\u6307 Offer 53 - I. \u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u67E5\u627E\u6570\u5B57 I</strong></li><li><strong>875. \u7231\u5403\u9999\u8549\u7684\u73C2\u73C2</strong></li><li><strong>1337. \u77E9\u9635\u4E2D\u6218\u6597\u529B\u6700\u5F31\u7684 K \u884C</strong></li></ul><h3 id="\u624B\u6495\u7B97\u6CD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u624B\u6495\u7B97\u6CD5\u9898" aria-hidden="true">#</a> \u624B\u6495\u7B97\u6CD5\u9898</h3>`,6),S={start:"278"},j={href:"https://leetcode-cn.com/problems/first-bad-version/",target:"_blank",rel:"noopener noreferrer"},B=s("\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C"),N=e(`<p>\u672C\u9898\u7B97\u662F\u7ECF\u5178\u4E8C\u5206\u6A21\u677F\u9898\uFF0C\u9898\u76EE\u4EE3\u7801\u76F4\u63A5\u5C31\u662F\u4E8C\u5206\u7684\u6A21\u677F\u3002\u4F46\u505A\u9898\u4E00\u5B9A\u8981\u629B\u5F03\u6A21\u677F\uFF08\u6216\u8005\u8BF4\u4E86\u89E3\u6A21\u677F\u4E2D\u6BCF\u4E2A\u7EC6\u8282\uFF09\uFF0C\u5426\u5219\u4F60\u8FDF\u65E9\u4F1A\u6B7B\u4E8E\u5176\u4E2D\u7EC6\u8282\u7684\u3002</p><p>\u4E24\u79CD\u4E8C\u5206\u601D\u8DEF\uFF1A1.\u627E\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7684\u7248\u672C 2.\u662F\u627E\u5230\u6700\u540E\u4E00\u4E2A\u6B63\u786E\u7684\u7248\u672C\uFF0C\u90A3\u9519\u8BEF\u7248\u672C\u5C31\u662F\u518D+1\u5373\u53EF\u3002</p><p>\u627E\u5230\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7248\u672C\uFF1A\u4E5F\u5C31\u662F\u6700\u5DE6\u8FB9\u7684\u9519\u8BEF\u7248\u672C\u3002\u5F53check(mid)\u53D1\u73B0\u662F\u9519\u8BEF\u7248\u672C\u65F6\uFF0Cmid\u53F3\u8FB9\u4E00\u5B9A\u5168\u662F\u9519\u8BEF\u7684\uFF0C\u56E0\u6B64right\u5FC5\u987B\u5F80\u5DE6\u8FB9\u79FB\u52A8\uFF0C\u90A3right=mid\u8FD8\u662F=mid-1\u5462\uFF1F<strong>\u53D6\u51B3\u4E8Ewhile(left&lt;right)\u548Cmid\u843D\u70B9</strong>\uFF0C\u5F53left&lt;right\uFF0C\u6709right=mid\uFF0C\u56E0\u4E3Aleft=right\u65F6\u4F1A\u9000\u51FAwhile\uFF0C\u800C\u6B64\u65F6right\u662F\u4E0D\u65AD\u5DE6\u79FB\uFF0C\u6700\u7EC8\u4E00\u5B9A\u662F\u6700\u5DE6\u8FB9\u7684\u9519\u8BEF\u7248\u672C\u3002</p><p>\u627E\u5230\u6700\u540E\u4E00\u4E2A\u6B63\u786E\u7684\u7248\u672C\uFF1A\u4E5F\u5C31\u662F\u6700\u53F3\u8FB9\u7684\u6B63\u786E\u7248\u672C\u3002\u5F53check(mid)\u53D1\u73B0\u662F\u6B63\u786E\u7248\u672C\u65F6\uFF0Cmid\u5DE6\u8FB9\u4E00\u5B9A\u5168\u662F\u6B63\u786E\u7248\u672C\uFF0C\u56E0\u6B64left\u5FC5\u987B\u53F3\u79FB\u3002\u540C\u4E0A\u8FB9\u7ED3\u8BBA\uFF0C\u5F53left&lt;right\uFF0Cleft=mid\uFF0Cleft\u4E0D\u65AD\u53F3\u79FB\uFF0C\u6700\u7EC8\u627E\u5230\u6700\u540E\u4E00\u4E2A\u6B63\u786E\u7684\u7248\u672C\uFF0C\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7248\u672C\u5728\u7ED3\u679C\u4E0A+1\u5373\u53EF\u3002</p><p><strong>\u5404\u79CD\u573A\u666F\u4E0B\u7684\u4EE3\u7801\u662F\u5982\u4F55\u5199\u7684</strong></p><p>\u627E\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7248\u672C(mid\u843D\u70B9\u5FC5\u987B\u504F\u5DE6)\uFF0Cwhile(left&lt;right)\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u533A\u95F4\u4E3A[1,n]</span>
<span class="token keyword">func</span> <span class="token function">firstBadVersion</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> n
    <span class="token keyword">for</span> l <span class="token operator">&lt;</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> r
<span class="token punctuation">}</span>

<span class="token comment">// \u533A\u95F4\u4E3A[1,n+1]\uFF0C\u540C\u6837\u517C\u5BB9\uFF0C\u56E0\u4E3Aright\u4E0D\u65AD\u5DE6\u79FB\u3002</span>
<span class="token keyword">func</span> <span class="token function">firstBadVersion</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token operator">+</span><span class="token number">1</span>
    <span class="token keyword">for</span> l <span class="token operator">&lt;</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> r
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u627E\u7B2C\u4E00\u4E2A\u9519\u8BEF\u7248\u672C\uFF0Cwhile(left&lt;=right)\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u533A\u95F4\u4E3A[1,n]\uFF0C\u540C\u4E0A\u9762\u7ED3\u8BBA\uFF0C\u540C\u6837\u517C\u5BB9\u533A\u95F4\u4E3A[1,n+1]</span>
<span class="token keyword">func</span> <span class="token function">firstBadVersion</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> n
    <span class="token keyword">for</span> l <span class="token operator">&lt;=</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid<span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> r<span class="token operator">+</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u627E\u6700\u540E\u4E00\u4E2A\u6B63\u786E\u7248\u672C\uFF08mid\u843D\u70B9\u5FC5\u987B\u504F\u53F3\uFF09\uFF0Cwhile(left&lt;right)\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u533A\u95F4\u4E3A[0,n]\uFF0C\u7531\u4E8El&lt;r\uFF0C\u65E0\u6CD5\u53D6\u5230l=r\u7684\u573A\u666F\uFF0C\u4E14\u515C\u5E95\u5FC5\u987B\u662Fl+1\uFF0C\u6240\u4EE5\u533A\u95F4\u4E0D\u80FD\u4E3A[1,n]</span>
<span class="token keyword">func</span> <span class="token function">firstBadVersion</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n
    <span class="token keyword">for</span> l <span class="token operator">&lt;</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid<span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token operator">+</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u627E\u6700\u540E\u4E00\u4E2A\u6B63\u786E\u7248\u672C\uFF0Cwhile(left&lt;=right)\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u533A\u95F4[1,n]\u6216\u7740[0,n]\u90FD\u53EF\u4EE5\uFF0C\u56E0\u4E3A\u843D\u70B9\u504F\u53F3\uFF0Cleft\u4E0D\u65AD\u53F3\u79FB\u3002</span>
<span class="token keyword">func</span> <span class="token function">firstBadVersion</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">,</span> r <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token comment">// \u6B64\u5904\u540C\u6837\u53EF\u4EE5\u4F7F\u7528[0,n]</span>
    <span class="token keyword">for</span> l <span class="token operator">&lt;=</span> r <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token function">isBadVersion</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid<span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid<span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dfs" tabindex="-1"><a class="header-anchor" href="#dfs" aria-hidden="true">#</a> DFS</h2><blockquote><p>\u540C\u56DE\u6EAF\u7B97\u6CD5</p></blockquote><h2 id="bfs" tabindex="-1"><a class="header-anchor" href="#bfs" aria-hidden="true">#</a> BFS</h2><blockquote><p>\u628A\u95EE\u9898\u62BD\u8C61\u6210\u56FE\uFF0C\u4ECE\u4E00\u4E2A\u70B9\u5F00\u59CB\u5411\u56DB\u5468\u6269\u6563\uFF0C\u4E00\u822C\u4F7F\u7528<code>\u961F\u5217</code>\u8F85\u52A9\u5B9E\u73B0\uFF08\u501F\u52A9\u5148\u8FDB\u5148\u51FA\u7279\u6027\u4E00\u5C42\u4E00\u5C42\u904D\u5386\uFF09\u3002\u540C\u65F6\u4E5F\u7ECF\u5E38\u7528\u4E8E\u89E3\u51B3<code>\u6700\u77ED\u3001\u6700\u5C0F</code>\u76F8\u5173\u95EE\u9898\u3002</p></blockquote><ul><li>\u5355\u5411bfs\u6A21\u677F</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8BA1\u7B97\u4ECE\u8D77\u70B9 start \u5230\u7EC8\u70B9 target \u7684\u6700\u8FD1\u8DDD\u79BB</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token class-name">Node</span> start<span class="token punctuation">,</span> <span class="token class-name">Node</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6838\u5FC3\u6570\u636E\u7ED3\u6784</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u907F\u514D\u8D70\u56DE\u5934\u8DEF</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5C06\u8D77\u70B9\u52A0\u5165\u961F\u5217</span>
    q<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F55\u6269\u6563\u7684\u6B65\u6570</span>
    visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> sz <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C06\u5F53\u524D\u961F\u5217\u4E2D\u7684\u6240\u6709\u8282\u70B9\u5411\u56DB\u5468\u6269\u6563</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sz<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> cur <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5E38\u5728\u8FD9\u91CC\u5904\u7406\u7AD9\u969C\u788D\u7269\u903B\u8F91</span>
            <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5212\u91CD\u70B9\uFF1A\u8FD9\u91CC\u5224\u65AD\u662F\u5426\u5230\u8FBE\u7EC8\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur is target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> step<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5C06 cur \u7684\u76F8\u90BB\u8282\u70B9\u52A0\u5165\u961F\u5217</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> x <span class="token operator">:</span> cur<span class="token punctuation">.</span><span class="token function">adj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    q<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5212\u91CD\u70B9\uFF1A\u66F4\u65B0\u6B65\u6570\u5728\u8FD9\u91CC</span>
        step<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
	<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u53CC\u5411bfs\u6A21\u677F</li></ul><blockquote><p>\u53EA\u6709\u5F53\u77E5\u9053\u76EE\u6807\u65F6\u624D\u80FD\u4ECE\u76EE\u6807\u540C\u65F6\u5012\u63A8\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token class-name">String</span> start<span class="token punctuation">,</span> <span class="token class-name">String</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> q1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> q2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    q1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
    q2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q1<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>q2<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token comment">// \u4F18\u5316\u6280\u5DE7\uFF1A\u9009\u53D6\u96C6\u5408\u8F83\u5C0F\u7684\u5F00\u59CB\u904D\u5386</span>
    	<span class="token comment">// \u96C6\u5408\u5143\u7D20\u591A\uFF0C\u6269\u6563\u540E\u7684\u5143\u7D20\u4E5F\u8D8A\u591A\uFF0C\u5360\u7528\u7A7A\u95F4\u7684\u589E\u957F\u901F\u5EA6\u66F4\u5FEB\uFF0C\u6548\u7387\u5C31\u8D8A\u4F4E</span>
    	<span class="token keyword">if</span> <span class="token punctuation">(</span>q1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> q2<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        	<span class="token comment">// \u4EA4\u6362 q1 \u548C q2</span>
        	<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> temp <span class="token operator">=</span> q1<span class="token punctuation">;</span>
        	q1 <span class="token operator">=</span> q2<span class="token punctuation">;</span>
        	q2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
    	<span class="token comment">// q1,q2\u5728\u904D\u5386\u8FC7\u7A0B\u4E0D\u80FD\u4FEE\u6539\uFF0C\u7528temp\u5B58\u50A8\uFF0C\u4E8B\u540E\u518D\u8D4B\u503C\u7ED9q1,q2</span>
    	<span class="token comment">// temp\u4EE3\u8868\u5F53\u524D\u4E00\u5C42\u7684\u904D\u5386\u7ED3\u679C</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> cur <span class="token operator">:</span> q1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5904\u7406\u969C\u788D\u7269\u903B\u8F91</span>
            <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>q2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> step<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u76F8\u90BB\u8282\u70B9\u52A0\u5165</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> x <span class="token operator">:</span> cur<span class="token punctuation">.</span><span class="token function">adj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    temp<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    visited<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        step<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token comment">// \u6280\u5DE7\uFF1A\u7531\u4E8E\u9700\u8981\u524D\u540E\u53CC\u5411\u904D\u5386\uFF0C\u907F\u514D\u5197\u4F59\u4EE3\u7801\uFF0C\u4EA4\u6362\u53D8\u91CF\u5373\u53EF</span>
		<span class="token comment">// \u672C\u6B21\u904D\u5386\u7ED3\u679Ctemp\u662Fq1\u7684\uFF0C\u7531\u4E8E\u8981\u4EA4\u6362q1q2\uFF0C</span>
		<span class="token comment">// \u6240\u4EE5\u5C06q1\u7684\u4E1C\u897F\u7ED9q2\uFF08\u5373q2=temp\uFF09\uFF0Cq2\u7684\u7ED9q1\uFF08q1=q2\uFF09</span>
        q1 <span class="token operator">=</span> q2<span class="token punctuation">;</span>
        q2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function V(I,E){const t=l("router-link"),o=l("ExternalLinkIcon");return i(),u("div",null,[k,n("nav",d,[n("ul",null,[n("li",null,[a(t,{to:"#\u4E8C\u5206\u6CD5-\u4E8C\u5206\u67E5\u627E"},{default:p(()=>[m]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u4E8C\u5206\u7EC6\u8282"},{default:p(()=>[v]),_:1})]),n("li",null,[a(t,{to:"#\u4E8C\u5206\u67E5\u627E\u6A21\u677F"},{default:p(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#\u4E8C\u5206\u76F8\u5173\u9898\u76EE"},{default:p(()=>[g]),_:1})]),n("li",null,[a(t,{to:"#\u624B\u6495\u7B97\u6CD5\u9898"},{default:p(()=>[f]),_:1})])])]),n("li",null,[a(t,{to:"#dfs"},{default:p(()=>[h]),_:1})]),n("li",null,[a(t,{to:"#bfs"},{default:p(()=>[w]),_:1})])])]),y,n("p",null,[n("a",_,[q,a(o)])]),x,n("ol",S,[n("li",null,[n("a",j,[B,a(o)])])]),N])}const z=c(r,[["render",V],["__file","\u641C\u7D22\u7B97\u6CD5.html.vue"]]);export{z as default};
